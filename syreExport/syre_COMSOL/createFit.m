function [fitresult, gof] = createFit(ff, Bf, pfe_f)
%CREATEFIT(F,B,PFE)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input: f
%      Y Input: B
%      Z Output: pfe
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 24-May-2024 15:31:11


%% Fit: 'untitled fit 1'.
[xData, yData, zData] = prepareSurfaceData( ff, Bf, pfe_f );

% Set up fittype and options.
ft = fittype( 'KH*f^ALPHA*B^BETA', 'independent', {'f', 'B'}, 'dependent', 'pfe' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.DiffMaxChange = 0.01;
opts.Display = 'Off';
opts.Robust = 'Bisquare';
opts.StartPoint = [0.779167230102011 0.12990620847373 0.934010684229183];
opts.Lower = [0 0 0]; % Lower bounds for coefficients
opts.Upper = [Inf Inf Inf]; % Upper bounds for coefficients

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% % Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, [xData, yData], zData );
% legend( h, 'untitled fit 1', 'pfe vs. f, B', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% xlabel( 'f', 'Interpreter', 'none' );
% ylabel( 'B', 'Interpreter', 'none' );
% zlabel( 'pfe', 'Interpreter', 'none' );
% grid on


